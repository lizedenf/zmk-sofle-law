#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    hml: hml {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        flavor = "balanced";
        hold-trigger-key-positions = <59 60 46 33 20 7 8 21 8 10 11 12 21 22 23 24 25 34 35 36 37 38 47 48 49 50 51 61 62 63 9>;
        hold-trigger-on-release;
    };

    hmr: hmr {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        flavor = "balanced";
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57 52>;
        hold-trigger-on-release;
    };

    hmmods: hmmods {
        compatible = "zmk,behavior-hold-tap";
        label = "HMMODS";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <180>;
        flavor = "tap-preferred";
    };

    hmlayer: hmlayer {
        compatible = "zmk,behavior-hold-tap";
        label = "HMLAYER";
        bindings = <&kp>, <&to>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <180>;
        flavor = "tap-preferred";
    };

    toggle1: toggle1 {
        compatible = "zmk,behavior-toggle-layer";
        label = "TOGGLE1";
        #binding-cells = <1>;
    };

    DTCaps: DTCaps {
        compatible = "zmk,behavior-tap-dance";
        label = "DTCAPS";
        #binding-cells = <0>;
        bindings = <&kp COMMA>, <&caps_word>, <&kp CLCK>;
    };

    DTlayers: DTlayers {
        compatible = "zmk,behavior-tap-dance";
        label = "DTLAYERS";
        #binding-cells = <0>;
        bindings = <&tog 1>, <&tog 2>;
    };

    brkt: brkt {
        compatible = "zmk,behavior-tap-dance";
        label = "BRKT";
        #binding-cells = <0>;
        bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
    };

    paren: paren {
        compatible = "zmk,behavior-tap-dance";
        label = "PAREN";
        #binding-cells = <0>;
        bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
    };

    Tildeesc: Tildeesc {
        compatible = "zmk,behavior-tap-dance";
        label = "TILDEESC";
        #binding-cells = <0>;
        bindings = <&kp TILDE>, <&kp ESCAPE>, <&kp LS(LC(ESCAPE))>;
    };

    combos {
        compatible = "zmk,combos";

        left_bracket {
            timeout-ms = <50>;
            bindings = <&brkt>;
            key-positions = <43 44>;
        };

        right_bracket {
            timeout-ms = <50>;
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <46 47>;
        };

        left_paren {
            timeout-ms = <50>;
            bindings = <&paren>;
            key-positions = <30 31>;
        };

        right_paren {
            timeout-ms = <50>;
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <33 34>;
        };

        dtlayers {
            timeout-ms = <50>;
            bindings = <&DTlayers>;
            key-positions = <17 18>;
        };

        pipe {
            timeout-ms = <50>;
            bindings = <&kp PIPE>;
            key-positions = <31 33>;
        };

        back_slash {
            timeout-ms = <50>;
            bindings = <&kp BACKSLASH>;
            key-positions = <18 20>;
        };

        layer3 {
            bindings = <&tog 3>;
            key-positions = <55 61>;
        };

        plaintiff {
            bindings = <&plaintiff>;
            key-positions = <14 56>;
        };

        defendant {
            bindings = <&Defendant>;
            key-positions = <15 56>;
        };

        layer0 {
            bindings = <&to 0>;
            key-positions = <56 60>;
        };

        layer1 {
            bindings = <&tog 1>;
            key-positions = <57 59>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <42 41>;
        };

        capslock {
            bindings = <&kp CLCK>;
            key-positions = <5 4>;
            timeout-ms = <50>;
        };

        emdash {
            bindings = <&emdash>;
            key-positions = <42 56 41>;
        };

        snipping {
            bindings = <&kp LG(LS(S))>;
            key-positions = <28 57>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <29 57>;
        };

        specialpaste {
            bindings = <&kp LC(RS(V))>;
            key-positions = <42 43>;
        };

        parasym {
            bindings = <&paragraphsym>;
            key-positions = <56 28 27>;
        };

        sectionsym {
            bindings = <&sectionsym>;
            key-positions = <56 28 29>;
        };

        copy {
            bindings = <&kp K_COPY>;
            key-positions = <42 55>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <55 43>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <39 56>;
        };

        Ctrl+z {
            bindings = <&kp LC(Z)>;
            key-positions = <40 55>;
        };

        DTlayer2 {
            bindings = <&DTlayers>;
            key-positions = <21 20>;
            timeout-ms = <50>;
        };

        Lens {
            bindings = <&SearchLens>;
            key-positions = <14 15 16>;
        };
    };

    macros {
        paragraphsym: paragraphsym {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_8 &kp KP_NUMBER_2 &kt LALT>;
            label = "paragraphsym";
            tap-ms = <7>;
        };

        sectionsym: sectionsym {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_7 &kt LALT>;
            label = "SECTIONSYM";
            tap-ms = <2>;
        };

        emdash: emdash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_5 &kp KP_NUMBER_1 &kt LALT>;
            label = "EMDASH";
        };

        plaintiff: plaintiff {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(P) &kp L &kp A &kp I &kp N &kp T &kp I &kp F &kp F>;
            label = "PLAINTIFF";
            wait-ms = <0>;
            tap-ms = <5>;
        };

        Defendant: Defendant {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(D) &kp E &kp F &kp E &kp N &kp D &kp A &kp N &kp T>;
            label = "DEFENDANT";
            tap-ms = <2>;
        };

        SearchLens: SearchLens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp S>;
            label = "SEARCHLENS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            bindings = <
&kp ESC     &kp N1          &kp N2              &kp N3            &kp N4                    &kp N5           &kp UP_ARROW     &kp N6      &kp N7                     &kp N8                  &kp N9               &kp N0                  &kp BACKSPACE
&Tildeesc   &kp Q           &kp W               &kp E             &kp R                     &kp T            &kp DOWN_ARROW   &kp Y       &kp U                      &kp I                   &kp O                &kp P                   &kp BSLH
&kp TAB     &hmmods LGUI A  &hmmods LEFT_ALT S  &hmmods LCTRL D   &hmmods LEFT_SHIFT F      &kp G            &kp LEFT_ARROW   &kp H       &hmmods LEFT_SHIFT J       &hmmods LCTRL K         &hmmods RIGHT_ALT L  &hmmods RIGHT_GUI SEMI  &kp APOS
&kp LSHFT   &kp Z           &kp X               &kp C             &kp V                     &kp B            &kp RIGHT_ARROW  &kp N       &kp M                      &DTCaps                 &kp DOT              &kp FSLH                &kp ENTER
&kp C_MUTE  &kp LEFT_ALT    &lt 2 ENTER         &hmlayer LCTRL 1  &hmmods LEFT_SHIFT SPACE  &kp BACKSPACE    &kp ENTER        &kp DELETE  &hmmods RIGHT_SHIFT ENTER  &hmlayer RIGHT_SHIFT 2  &lt 1 SPACE          &rgb_ug RGB_TOG
            >;

            display-name = "0";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        L1-num-nav {
            bindings = <
&trans         &kp PLUS   &kp LEFT_BRACKET  &kp PLUS  &kp MINUS  &kp EQUAL    &mmv MOVE_UP     &kp F6           &kp F7    &kp F8    &kp LPAR   &kp RPAR   &trans
&trans         &kp SQT    &kp N7            &kp N8    &kp N9     &kp SLASH    &mmv MOVE_DOWN   &kp PG_UP        &kp HOME  &kp UP    &kp END    &kp MINUS  &trans
&trans         &kp N0     &kp N4            &kp N5    &kp N6     &kp COLON    &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT  &kp DOWN  &kp RIGHT  &trans     &trans
&kp LC(ENTER)  &kp COMMA  &kp N1            &kp N2    &kp N3     &kp DOT      &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &trans    &trans    &trans     &trans     &trans
&kp C_MUTE     &kp N0     &trans            &trans    &trans     &trans       &mkp LCLK        &trans           &trans    &trans    &trans     &trans
            >;

            display-name = "1";
            sensor-bindings = <&scroll_encoder>;
        };

        L2_symbols {
            display-name = "2";
            bindings = <
&trans  &trans         &trans       &trans     &trans         &trans          &trans  &trans          &trans     &trans            &trans             &trans        &trans
&trans  &kp EXCL       &kp AT       &kp POUND  &kp DLLR       &kp PERCENT     &trans  &kp CARET       &kp AMPS   &kp STAR          &kp LPAR           &kp RPAR      &trans
&trans  &paragraphsym  &sectionsym  &kp TILDE  &kp MINUS      &kp PLUS        &trans  &kp EQUAL       &kp GRAVE  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp COLON     &trans
&trans  &emdash        &kp SLASH    &trans     &kp LC(RS(V))  &kp KP_MINUS    &trans  &kp UNDERSCORE  &emdash    &kp LESS_THAN     &kp GREATER_THAN   &kp QUESTION  &trans
&trans  &trans         &trans       &trans     &trans         &trans          &trans  &trans          &trans     &trans            &trans             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        bt-rgb-media {
            display-name = "3";
            bindings = <
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &kp C_VOL_UP      &kp F6           &kp F7           &kp F8      &kp LPAR   &kp RPAR          &trans
&bt BT_CLR_ALL   &kp QMARK        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &kp C_VOL_DN      &kp PG_UP        &kp HOME         &kp UP      &kp END    &kp MINUS         &kp EQUAL
&kp TILDE        &trans           &trans          &trans           &trans           &mkp MB5           &kp C_PREV        &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&rgb_ug RGB_SPD  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &kp C_NEXT        &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE       &bootloader      &trans          &trans           &trans           &trans             &kp C_PLAY_PAUSE  &trans           &trans           &trans      &trans     &bootloader
            >;

            sensor-bindings = <&inc_dec_kp C_FF C_RW>;
        };

        L4 {
            bindings = <
&kp ESC   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &mmv MOVE_UP     &kp F6                 &kp F7   &kp F8      &kp F9          &kp F10      &trans
&kp CAPS  &trans        &trans        &trans        &trans        &kp LEFT_BRACE          &mmv MOVE_DOWN   &kp RIGHT_BRACE        &kp F11  &kp F12     &trans          &kp UNDER    &kp PLUS
&trans    &trans        &trans        &trans        &trans        &kp LEFT_PARENTHESIS    &mmv MOVE_LEFT   &kp RIGHT_PARENTHESIS  &trans   &trans      &trans          &kp LBRC     &kp RBRC
&trans    &sys_reset    &trans        &bootloader   &trans        &kp LEFT_BRACKET        &mmv MOVE_RIGHT  &kp RIGHT_BRACKET      &trans   &sys_reset  &soft_off       &bootloader  &trans
&trans    &trans        &trans        &trans        &trans        &trans                  &mkp LCLK        &trans                 &trans   &trans      &studio_unlock  &trans
            >;

            display-name = "4";
            sensor-bindings = <&scroll_encoder>;
        };

        no-hr {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5    &kp UP_ARROW     &kp N6  &kp N7  &kp N8     &kp N9           &kp N0      &kp BACKSPACE
&kp GRAVE   &kp Q      &kp W         &kp E         &kp R   &kp T     &kp DOWN_ARROW   &kp Y   &kp U   &kp I      &kp O            &kp P       &kp BSLH
&kp TAB     &kp A      &kp S         &kp D         &kp F   &kp G     &kp LEFT_ARROW   &kp H   &kp J   &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B     &kp RIGHT_ARROW  &kp N   &kp M   &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &trans    &kp ENTER        &trans  &mo 5   &kp ENTER  &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "no-hr";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
